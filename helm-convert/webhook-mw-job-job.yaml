apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: webhook-mw-job
  name: webhook-mw-job
spec:
  template:
    metadata:
      name: webhook-mw-job
    spec:
      containers:
      - command:
        - sh
        - -c
        - |
          set -e
          K8S_NAMESPACE=${POD_NAMESPACE:-default}
          CA_BUNDLE=$(kubectl get configmap -n kube-system extension-apiserver-authentication -o=jsonpath='{.data.client-ca-file}' | base64 | tr -d '\n')

          if [ ! $CA_BUNDLE ]; then
              echo "ERROR: CA_BUNDLE is empty!" >&2
              exit 1
          fi

          cat <<EOF | kubectl -n ${K8S_NAMESPACE} apply -f -
          apiVersion: admissionregistration.k8s.io/v1beta1
          kind: MutatingWebhookConfiguration
          metadata:
            name: chaos-mesh-sidecar-injector
            labels:
              app.kubernetes.io/name: chaos-mesh
              app.kubernetes.io/managed-by: Tiller
              app.kubernetes.io/instance: chaos-mesh
              app.kubernetes.io/component: admission-webhook
              helm.sh/chart: chaos-mesh-dev
          webhooks:
            - name: admission-webhook.pingcap.com
              clientConfig:
                service:
                  name: chaos-mesh-controller-manager
                  namespace: ${K8S_NAMESPACE}
                  path: "/inject-v1-pod"
                caBundle: "${CA_BUNDLE}"
              rules:
                - operations: [ "CREATE" ]
                  apiGroups: [""]
                  apiVersions: ["v1"]
                  resources: ["pods"]
              namespaceSelector:
                matchLabels:
                  admission-webhook: enabled
          EOF
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        image: bitnami/kubectl:latest
        imagePullPolicy: IfNotPresent
        name: chaos-mesh-job-mw
      restartPolicy: Never
      serviceAccountName: chaos-controller-manager
